#!/bin/bash
# set -e
source ./scripts/common.bash

BlacksmithContainer=blacksmith-kvm
EtcdContainer=blacksmith-kvm-dev-etcd

function run-etcd {
  docker run --name $EtcdContainer -d \
    -p 4001:4001 \
    -p 2380:2380 \
    -p 2379:2379 \
    quay.io/coreos/etcd:v2.2.3 \
    -name etcd0 \
    -advertise-client-urls http://${BobIP}:2379,http://${BobIP}:4001 \
    -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 \
    -initial-advertise-peer-urls http://${BobIP}:2380 \
    -listen-peer-urls http://0.0.0.0:2380 \
    -initial-cluster-token etcd-cluster-1 \
    -initial-cluster etcd0=http://${BobIP}:2380 \
    -initial-cluster-state new
    # -initial-cluster bob=http://${BobIP}:2380,node1=http://172.20.0.11:2380,node2=http://172.20.0.12:2380,node3=http://172.20.0.13:2380 \
}

function run-blacksmith {
  mkdir -p ./config
  cat << EOF > ./config/config.yaml
# This file is generated by $0
---
conf:
  blacksmith-image: ${BlacksmithImage}
  etcd: http://${BobIP}:2379
  if: ${Bridge}
  cluster-name: cafecluster
  lease-start: ${LeaseStart}
  file-server: http://${BobIP}/
  lease-range: 10
  dns: 8.8.8.8
  debug: true
  http-listen: ${BobIP}:8000
  api-listen: ${BobIP}:8001
  tls-cert: $(base64 -w0 certs/server.crt)
  tls-key: $(base64 -w0 certs/server.key)
  tls-ca: $(base64 -w0 certs/ca.crt)
  agent-tls-cert: $(base64 -w0 certs/client.crt)
  agent-tls-key: $(base64 -w0 certs/client.key)
  agent-url: http://${BobIP}:9090/blacksmith-agent
  workspace: /workspace
  workspace-repo: ${WorkspaceGitURL}
  workspace-repo-branch: master
  initial-config: /workspace/initial.yaml
  private-key: $(base64 -w0 ~/.ssh/id_rsa)
  insecure-registry: ${BobIP}:5000
ssh-keys:
  - $(cat ~/.ssh/id_rsa.pub)
EOF

  bash ./scripts/gen-initial-yaml.bash > $GOPATH/src/github.com/cafebazaar/blacksmith/workspaces/current/initial.yaml

  docker run -d --name $BlacksmithContainer \
    --net=host \
    -v $GOPATH/src/github.com/cafebazaar/blacksmith/workspaces/current:/workspace \
    -v $PWD/config/:/config/ \
    -v /etc/ssl/certs:/etc/ssl/certs \
    ${BlacksmithImageForBob} --verbose --config /config/config.yaml
}

function usage {
  echo "USAGE: [TODO]"
}

function main {
  sudo date > /dev/null
  case "$1" in
    "all")
      bash $0 destroy || true
      bash $0 create
      docker logs -f $BlacksmithContainer
      ;;
    "destroy")
      bash scripts/netctl.bash destroy
      docker rm -f $EtcdContainer 2>/dev/null || true
      docker rm -f $BlacksmithContainer 2>/dev/null || true
      destroy-nodes
      ;;
    "create")
      bash scripts/netctl.bash create
      run-etcd
      run-blacksmith
      create-nodes
      # sudo virt-manager
      ;;
    *)
      usage
      exit 2
      ;;
  esac
}

function create-nodes {
  local OPTS="--memory=1024 --vcpus=1 --pxe --disk pool=default,size=6 --os-type=linux --os-variant=generic --noautoconsole --events on_poweroff=preserve"
  virt-install --name $NODE1_NAME --network=bridge:$Bridge,mac=$NODE1_MAC $OPTS --boot=hd,network
  virt-install --name $NODE2_NAME --network=bridge:$Bridge,mac=$NODE2_MAC $OPTS --boot=hd,network
  virt-install --name $NODE3_NAME --network=bridge:$Bridge,mac=$NODE3_MAC $OPTS --boot=hd,network
}

function destroy-nodes {
  for node in ${NODES[@]}; do
    virsh destroy $node
  done
  for node in ${NODES[@]}; do
    virsh undefine $node
  done
  virsh pool-refresh default
  for node in ${NODES[@]}; do
    virsh vol-delete --pool default $node.qcow2
  done
}

main $@
